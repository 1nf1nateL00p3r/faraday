# Faraday Penetration Test IDE
# Copyright (C) 2016  Infobyte LLC (http://www.infobytesec.com/)
# See the file 'doc/LICENSE' for the license information
import time

from flask import Blueprint
from marshmallow import fields

import server.utils.logger

from server.api.base import AutoSchema, ReadWriteView
from server.models import VulnerabilityTemplate

vulnerability_template_api = Blueprint('vulnerability_template_api', __name__)
logger = server.utils.logger.get_logger(__name__)


class VulnerabilityTemplateSchema(AutoSchema):
    _id = fields.Integer(dump_only=True, attribute='id')
    _rev = fields.String(default='', dump_only=True)


    class Meta:
        model = VulnerabilityTemplate
        fields = ('id', '_id', '_rev')


class VulnerabilityTemplateView(ReadWriteView):
    route_base = 'vulnerability_template'
    model_class = VulnerabilityTemplate
    schema_class = VulnerabilityTemplateSchema

    def _envelope_list(self, objects, pagination_metadata=None):
        vuln_tpls = []
        for template in objects:
            vuln_tpls.append({
                'id': template['_id'],
                'key': template['_id'],
                'value': template
            })
        return {
            'rows': vuln_tpls,
        }

VulnerabilityTemplateView.register(vulnerability_template_api)
